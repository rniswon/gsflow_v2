still need snowcomp, soilzone, srunoff, dynamic_param_read, dynamic_soil_param_read, seg2hru

no changes:
strmflow
segment_to_hru
potet_hamon
potet_jh
temp_dist2

new segment_to_hru, dynamic_soil_param_read

slight exe speed improvement and/or reduce memory requirements **
possible slight change in results ##
new options: write_climate_hru, prms_summary, nhru_summary, climate_hru
new modules: dynamic_soil_param_read, segment_to_hru

 parameters:
	removed control cbh_binary_flag
	add control write_binary_cbh (for nhru_summary)
	new dimension nstreamtemp
	new parameter: tempIN_segment
	new control forcing_check_flag
	remove control snow_cbh_flag, gwflow_cbh_flag
	add control no_snow_flag
	add control seg2hru_flag
	add control soilzone_module
	new dimension ncbh (climate_hru)
	new parameter cbh_hru_id (climate_hru)
	new parameter cbh_active_flag
	
variables:
	new seg_res_time (strmflow_character)
	new stream_temp (obs)
	hru_frac_imperv (basin)
	hru_frac_dprst (basin)
	hru_frac_perv (basin)

moved variables hru_impervstor and dprst_stor_hru to PRMS_FLOWVARS from srunoff to reduce circular dependenices: subbasin, srunoff
moved variables soil_moist_tot and soil_zone_max to PRMS_FLOWVARS from soilzone to reduce circular dependenices: subbasin
moved variable basin_soil_rechr to PRMS_FLOWVARS from soilzone to reduce circular dependenices: prms_summary 

consistent declares (variables, intrinsic, routines): climate_hru, basin, call_modules, routing, gwflow, soltab, nhru_summary, xyz_dist, cascade, muskingum_lake, glacr_melt, stream_temp, basin_sum, ide_dist, nsegment_summary, prms_summary, basin_summary, precip_1sta_laps, potet_pan, water_use_read, water_balance, utils_prms, transp_tindex, precip_map, temp_map, temp_1sta_laps, strmflow_character,

consistent use of constants: climate_hru, call_modules, routing, intcp, soltab, xyz_dist, glacr_melt, stream_temp, prms_time, potet_pan, temp_map, subbasin, prms_constants, ddsolrad, obs, prms_summary, nsub_summary

new constants: ZERO_SNOWPACK

** remove unnecessary init of variables and unused "USE" variables and intrinsics : routing, gwflow, intcp, muskingum, obs, 
                            ccsolrad, transp_frost, potet_pan, water_balance, subbasin, climate_hru, srunoff

** deallocate arrays not needed after init: transp_tindex, 

declaration changes:
	potet_hs: hs_krs
	potet_pt: pt_alpha
	precip_1sta_laps: rain_adj, snow_adj
	precip_dist2: rain_mon, snow_mon, psta_mon
	ide_dist and xyz_dist: adjust_snow, adjust_rain
	stream_temp: lat_temp_adj
	cascade: cascade_tol
	gwflow: hru_gw_cascadeflow now double
	climate_hru: potet_cbh_adj, tmax_cbh_adj, tmin_cbh_adj, rain_cbh_adj, snow_cbh_adj
	adjmix_rain, basin_tsta, radj_sppt, radj_wppt, soil_moist_max (climateflow)
	soil_moist_init_frac:      &         'Initial fraction of available water in the capillary reservoir (fraction of soil_moist_max) for each HRU', &
	srunoff: hru_sroffp and hru_sroffi, dprst_vol_open_frac, dprst_vol_clos_frac, dprst_vol_frac, sro_to_dprst, sro_to_dprst_perv, sro_dprst_imperv
	
use It0 variables set in prms_time, "_ante" variables from single modules replaces with these It0 variables: water_balance, intcp, srunoff

** set special segment flow accummulator variables (flow_to_lakes, flow_to_ocean, flow_to_great_lakes, flow_out_region, flow_replacement, flow_out_NHM, flow_terminus, flow_in_region, flow_in_nation, flow_headwater, flow_in_great_lakes) only if at least one segment_type > 0: strmflow_in_out, muskingum, routing, muskingum_lake

## reduce mixed preceision calcs, assignments, comparisons: srunoff, soilzone, snowcomp, call_modules, routing, gwflow, glacr_melt, 
           strmflow_in_out, water_balance, ddsolrad, routing, basin_sum

3 less args for find_header_end: water_use_read, utils_prms, temp_map, precip_map, nhru_summary, 
1 less arg find_current_time: utils_prms, temp_map, precip_map, climate_hru
new function: find_cbh_header_end used by climate_hru
add hru id as arg in precip_form: precip_map, precip_1sta_laps, ide_dist, xyz_dist, climate_hru

spelling in comments: call_modules, soltab, gwflow, water_use_read, utils_prms, potet_pm_sta, basin_summary, convert_params, nsegment_summary, nhru_summary

output file changes with no changes in simulation results: write_climate_hru, water_balance, prms_summary

remove GSFLOW related code: subbasin, call_modules, basin, soilzone, climateflow

use : instead of 1 to pass 2-d arrays to routines, more standard fortran: soltab, xyz_dist, potet_pt, nsegment_summary, nsub_summary, map_results, glacr_melt

** use .not.(>) instead of <= : potet_pt, frost_date, potet_pm, potet_pm_sta, routing, srunoff

** use .not.(<) instead of >= : ddsolrad, precip_1sta_laps, stream_temp, srunoff

** use .not.(>) instead of < NEARZERO or CLOSEZERO: intcp


** pref_flag set in climatevars so flag can be used to reduce use of pref variables, some variables and parameters could be deallocated, but since declared they are initialized to 0: prms_summary

declared variables hru_frac_imperv, hru_frac_perv, and hru_frac_dprst to keept track of changes due to dynamic params instead of hru_percent_imperv and dprst_frac

compare pkwater_equiv to ZERO_SNOWPACK instead of DNEARZERO (same value)